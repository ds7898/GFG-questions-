

time complexity : o(n)
space complexity : o(1)
// } Driver Code Ends
class Solution
{
    public:
    int peakElement(int arr[], int n)
    {
       // Your code here
       
          
          if (n==1){
             return 0;
          }
     
          if(arr[0]>= arr[1]){
              return 0;
              
          }
          
          if (arr[n-1]>= arr[n-2]){
              return n-1;
          }
          
          
          for(int i= 1 ; i< n-1 ; i++){
              
              if(arr[i]>= arr[i-1]  && arr[i]>=arr[i+1]){
                  return i;
              }
              
              
              
          }
       
       
       
    }
};


 time complexity :o(logn)
 space complexity: O(n)
 class Solution
{
    public:
    int peakelement(int arr[] ,int lo ,int high , int n)
    {
        
        int  mid  = lo + (high-lo)/2;
        
       
            if((mid == 0 || arr[mid-1]<=arr[mid])  &&  (mid == n-1 || arr[mid +1] <= arr[mid]))
            {
                return mid ;
            } 
            
            else if (mid > 0  &&  arr[mid-1] > arr[mid])
            {
                return peakelement( arr , lo , (mid-1) ,n);
            }
            else 
            {
                return  peakelement( arr , (mid+1) , high ,n);
            }
            
    }
        
    
     int peakElement(int arr[], int n)
    {
       // Your code here
        
        
        
        return peakelement(arr , 0, n-1 ,n );
        
          
         
       
       
    }
};



